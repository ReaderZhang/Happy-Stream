# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: User API
    version: 0.0.1
paths:
    /v1/login:
        post:
            tags:
                - User
            operationId: User_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoginReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/logout:
        get:
            tags:
                - User
            operationId: User_Logout
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LogoutReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/member/add:
        post:
            tags:
                - User
            description: ==========================================================
            operationId: User_MemberAdd
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MemberAddReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MemberAddReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/member/get/{id}:
        get:
            tags:
                - User
            operationId: User_MemberGet
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MemberGetReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/member/list:
        post:
            tags:
                - User
            operationId: User_ListMembers
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MemberForm'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MemberTableReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/member/list/get/balance/{low}/{high}:
        get:
            tags:
                - User
            operationId: User_ListMemberGetBetweenBalance
            parameters:
                - name: low
                  in: path
                  required: true
                  schema:
                    type: number
                    format: double
                - name: high
                  in: path
                  required: true
                  schema:
                    type: number
                    format: double
                - name: page.pageNum
                  in: query
                  schema:
                    type: integer
                    format: int64
                - name: page.pageSize
                  in: query
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListMemberGetBetweenBalanceReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/member/list/get/email/{email}:
        get:
            tags:
                - User
            operationId: User_ListMemberGetByEmail
            parameters:
                - name: email
                  in: path
                  required: true
                  schema:
                    type: string
                - name: page.pageNum
                  in: query
                  schema:
                    type: integer
                    format: int64
                - name: page.pageSize
                  in: query
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListMemberGetByEmailReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/member/list/get/name/{name}:
        get:
            tags:
                - User
            operationId: User_ListMemberGetByName
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
                - name: page.pageNum
                  in: query
                  schema:
                    type: integer
                    format: int64
                - name: page.pageSize
                  in: query
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListMemberGetByNameReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/member/list/get/phone/{phone}:
        get:
            tags:
                - User
            operationId: User_ListMemberGetByPhone
            parameters:
                - name: phone
                  in: path
                  required: true
                  schema:
                    type: string
                - name: page.pageNum
                  in: query
                  schema:
                    type: integer
                    format: int64
                - name: page.pageSize
                  in: query
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListMemberGetByPhoneReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/member/list/get/recharge/{low}/{high}:
        get:
            tags:
                - User
            operationId: User_ListMemberGetBetweenRecharge
            parameters:
                - name: low
                  in: path
                  required: true
                  schema:
                    type: number
                    format: double
                - name: high
                  in: path
                  required: true
                  schema:
                    type: number
                    format: double
                - name: page.pageNum
                  in: query
                  schema:
                    type: integer
                    format: int64
                - name: page.pageSize
                  in: query
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListMemberGetBetweenRechargeReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/member/list/get/time/{start}/{end}/{pageNum}/{pageSize}:
        get:
            tags:
                - User
            operationId: User_ListMemberGetBetweenTime
            parameters:
                - name: start
                  in: path
                  required: true
                  schema:
                    type: string
                - name: end
                  in: path
                  required: true
                  schema:
                    type: string
                - name: pageNum
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListMemberGetBetweenTimeReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/member/list/get/{id}:
        get:
            tags:
                - User
            operationId: User_ListMemberGetById
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int64
                - name: page.pageNum
                  in: query
                  schema:
                    type: integer
                    format: int64
                - name: page.pageSize
                  in: query
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListMemberGetByIdReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/member/remove/{id}:
        delete:
            tags:
                - User
            operationId: User_MemberRemove
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MemberRemoveReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/member/update:
        patch:
            tags:
                - User
            operationId: User_MemberChange
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MemberChangeReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MemberChangeReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/permission/add:
        post:
            tags:
                - User
            description: ================================================================
            operationId: User_PermissionAdd
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PermissionAddReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PermissionAddReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/permission/get/all:
        get:
            tags:
                - User
            operationId: User_PermissionGetAll
            parameters:
                - name: page.pageNum
                  in: query
                  schema:
                    type: integer
                    format: int64
                - name: page.pageSize
                  in: query
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PermissionGetAllReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/permission/get/{id}:
        get:
            tags:
                - User
            operationId: User_PermissionGet
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int64
                - name: page.pageNum
                  in: query
                  schema:
                    type: integer
                    format: int64
                - name: page.pageSize
                  in: query
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PermissionGetReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/permission/remove/{id}:
        delete:
            tags:
                - User
            operationId: User_PermissionRemove
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PermissionRemoveReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/permission/update:
        patch:
            tags:
                - User
            operationId: User_PermissionChange
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PermissionChangeReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PermissionChangeReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/register:
        post:
            tags:
                - User
            operationId: User_Register
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegisterReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegisterReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/role/add:
        post:
            tags:
                - User
            description: ==================================================
            operationId: User_RoleAdd
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RoleAddReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RoleAddReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/role/get/all:
        get:
            tags:
                - User
            operationId: User_RoleGetAll
            parameters:
                - name: page.pageNum
                  in: query
                  schema:
                    type: integer
                    format: int64
                - name: page.pageSize
                  in: query
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RoleGetAllReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/role/get/{id}:
        get:
            tags:
                - User
            operationId: User_RoleGet
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int64
                - name: page.pageNum
                  in: query
                  schema:
                    type: integer
                    format: int64
                - name: page.pageSize
                  in: query
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RoleGetReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/role/remove/{id}:
        delete:
            tags:
                - User
            operationId: User_RoleRemove
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RoleRemoveReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/role/update:
        patch:
            tags:
                - User
            operationId: User_RoleChange
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RoleChangeReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RoleChangeReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        ListMemberGetBetweenBalanceReply:
            type: object
            properties:
                members:
                    type: array
                    items:
                        $ref: '#/components/schemas/MemberDTO'
                page:
                    $ref: '#/components/schemas/PageInfoReply'
        ListMemberGetBetweenRechargeReply:
            type: object
            properties:
                members:
                    type: array
                    items:
                        $ref: '#/components/schemas/MemberDTO'
                page:
                    $ref: '#/components/schemas/PageInfoReply'
        ListMemberGetBetweenTimeReply:
            type: object
            properties:
                members:
                    type: array
                    items:
                        $ref: '#/components/schemas/MemberDTO'
                page:
                    $ref: '#/components/schemas/PageInfoReply'
        ListMemberGetByEmailReply:
            type: object
            properties:
                members:
                    type: array
                    items:
                        $ref: '#/components/schemas/MemberDTO'
                page:
                    $ref: '#/components/schemas/PageInfoReply'
        ListMemberGetByIdReply:
            type: object
            properties:
                members:
                    type: array
                    items:
                        $ref: '#/components/schemas/MemberDTO'
                page:
                    $ref: '#/components/schemas/PageInfoReply'
        ListMemberGetByNameReply:
            type: object
            properties:
                members:
                    type: array
                    items:
                        $ref: '#/components/schemas/MemberDTO'
                page:
                    $ref: '#/components/schemas/PageInfoReply'
        ListMemberGetByPhoneReply:
            type: object
            properties:
                members:
                    type: array
                    items:
                        $ref: '#/components/schemas/MemberDTO'
                page:
                    $ref: '#/components/schemas/PageInfoReply'
        LoginReply:
            type: object
            properties:
                token:
                    type: string
                username:
                    type: string
                avator:
                    type: string
        LoginReq:
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
            description: 用户基础业务逻辑
        LogoutReply:
            type: object
            properties:
                ok:
                    type: boolean
        MemberAddReply:
            type: object
            properties:
                ok:
                    type: boolean
        MemberAddReq:
            type: object
            properties:
                member:
                    $ref: '#/components/schemas/MemberEntity'
            description: member表增删改查
        MemberChangeReply:
            type: object
            properties:
                ok:
                    type: boolean
        MemberChangeReq:
            type: object
            properties:
                member:
                    $ref: '#/components/schemas/MemberEntity'
        MemberDTO:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                username:
                    type: string
                phone:
                    type: string
                password:
                    type: string
                email:
                    type: string
                avator:
                    type: string
                recharge:
                    type: number
                    format: double
                balance:
                    type: number
                    format: double
                role:
                    type: string
                permissions:
                    type: array
                    items:
                        type: string
                createdAt:
                    type: string
                updatedAt:
                    type: string
                deletedAt:
                    type: string
        MemberEntity:
            type: object
            properties:
                username:
                    type: string
                phone:
                    type: string
                password:
                    type: string
                email:
                    type: string
                avator:
                    type: string
                recharge:
                    type: number
                    format: double
                balance:
                    type: number
                    format: double
                rid:
                    type: integer
                    format: int64
        MemberForm:
            type: object
            properties:
                search:
                    type: string
                type:
                    type: string
                start:
                    type: string
                end:
                    type: string
                status:
                    type: string
                blow:
                    type: number
                    format: double
                bhight:
                    type: number
                    format: double
                rlow:
                    type: number
                    format: double
                rhigh:
                    type: number
                    format: double
                pageSize:
                    type: integer
                    format: int64
                pageNum:
                    type: integer
                    format: int64
        MemberGetReply:
            type: object
            properties:
                members:
                    $ref: '#/components/schemas/MemberDTO'
        MemberRemoveReply:
            type: object
            properties:
                ok:
                    type: boolean
        MemberTable:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                username:
                    type: string
                email:
                    type: string
                phone:
                    type: string
                balance:
                    type: number
                    format: double
                recharge:
                    type: number
                    format: double
                createdAt:
                    type: string
                status:
                    type: integer
                    format: int32
        MemberTableReply:
            type: object
            properties:
                table:
                    type: array
                    items:
                        $ref: '#/components/schemas/MemberTable'
                page:
                    $ref: '#/components/schemas/PageInfoReply'
        PageInfoReply:
            type: object
            properties:
                pageNum:
                    type: integer
                    format: int64
                pageSize:
                    type: integer
                    format: int64
                total:
                    type: integer
                    format: int64
        PermissionAddReply:
            type: object
            properties:
                ok:
                    type: boolean
        PermissionAddReq:
            type: object
            properties:
                url:
                    type: string
                parentId:
                    type: integer
                    format: int64
        PermissionChangeReply:
            type: object
            properties:
                ok:
                    type: boolean
        PermissionChangeReq:
            type: object
            properties:
                permission:
                    $ref: '#/components/schemas/PermissionEntity'
        PermissionDTO:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                url:
                    type: string
                permissiondto:
                    $ref: '#/components/schemas/PermissionDTO'
            description: 权限表增删改查
        PermissionEntity:
            type: object
            properties:
                url:
                    type: string
                parentId:
                    type: integer
                    format: int64
        PermissionGetAllReply:
            type: object
            properties:
                permission:
                    type: array
                    items:
                        $ref: '#/components/schemas/PermissionDTO'
                page:
                    $ref: '#/components/schemas/PageInfoReply'
        PermissionGetReply:
            type: object
            properties:
                permission:
                    type: array
                    items:
                        $ref: '#/components/schemas/PermissionDTO'
                page:
                    $ref: '#/components/schemas/PageInfoReply'
        PermissionRemoveReply:
            type: object
            properties:
                ok:
                    type: boolean
        RegisterReply:
            type: object
            properties:
                token:
                    type: string
                username:
                    type: string
                avator:
                    type: string
        RegisterReq:
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
                phone:
                    type: string
        RoleAddReply:
            type: object
            properties:
                ok:
                    type: boolean
        RoleAddReq:
            type: object
            properties:
                role:
                    $ref: '#/components/schemas/RoleDTO'
        RoleChangeReply:
            type: object
            properties:
                ok:
                    type: boolean
        RoleChangeReq:
            type: object
            properties:
                role:
                    $ref: '#/components/schemas/RoleDTO'
        RoleDTO:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                roleName:
                    type: string
                permissions:
                    type: array
                    items:
                        type: string
            description: 角色表增删改查
        RoleGetAllReply:
            type: object
            properties:
                roles:
                    type: array
                    items:
                        $ref: '#/components/schemas/RoleDTO'
                page:
                    $ref: '#/components/schemas/PageInfoReply'
        RoleGetReply:
            type: object
            properties:
                roles:
                    type: array
                    items:
                        $ref: '#/components/schemas/RoleDTO'
                page:
                    $ref: '#/components/schemas/PageInfoReply'
        RoleRemoveReply:
            type: object
            properties:
                ok:
                    type: boolean
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
tags:
    - name: User
